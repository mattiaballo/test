/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BgSample {
    }
    interface ButtonsWrapper {
    }
    interface ImgSample {
    }
    interface MoholeTitle {
        "titleString": string;
    }
    interface NamedSlotParagraph {
    }
    interface SimpleButton {
        /**
          * Text shown inside button
         */
        "label": string;
    }
    interface SimpleLabel {
    }
    interface SlotParagraph {
    }
}
declare global {
    interface HTMLBgSampleElement extends Components.BgSample, HTMLStencilElement {
    }
    var HTMLBgSampleElement: {
        prototype: HTMLBgSampleElement;
        new (): HTMLBgSampleElement;
    };
    interface HTMLButtonsWrapperElement extends Components.ButtonsWrapper, HTMLStencilElement {
    }
    var HTMLButtonsWrapperElement: {
        prototype: HTMLButtonsWrapperElement;
        new (): HTMLButtonsWrapperElement;
    };
    interface HTMLImgSampleElement extends Components.ImgSample, HTMLStencilElement {
    }
    var HTMLImgSampleElement: {
        prototype: HTMLImgSampleElement;
        new (): HTMLImgSampleElement;
    };
    interface HTMLMoholeTitleElement extends Components.MoholeTitle, HTMLStencilElement {
    }
    var HTMLMoholeTitleElement: {
        prototype: HTMLMoholeTitleElement;
        new (): HTMLMoholeTitleElement;
    };
    interface HTMLNamedSlotParagraphElement extends Components.NamedSlotParagraph, HTMLStencilElement {
    }
    var HTMLNamedSlotParagraphElement: {
        prototype: HTMLNamedSlotParagraphElement;
        new (): HTMLNamedSlotParagraphElement;
    };
    interface HTMLSimpleButtonElement extends Components.SimpleButton, HTMLStencilElement {
    }
    var HTMLSimpleButtonElement: {
        prototype: HTMLSimpleButtonElement;
        new (): HTMLSimpleButtonElement;
    };
    interface HTMLSimpleLabelElement extends Components.SimpleLabel, HTMLStencilElement {
    }
    var HTMLSimpleLabelElement: {
        prototype: HTMLSimpleLabelElement;
        new (): HTMLSimpleLabelElement;
    };
    interface HTMLSlotParagraphElement extends Components.SlotParagraph, HTMLStencilElement {
    }
    var HTMLSlotParagraphElement: {
        prototype: HTMLSlotParagraphElement;
        new (): HTMLSlotParagraphElement;
    };
    interface HTMLElementTagNameMap {
        "bg-sample": HTMLBgSampleElement;
        "buttons-wrapper": HTMLButtonsWrapperElement;
        "img-sample": HTMLImgSampleElement;
        "mohole-title": HTMLMoholeTitleElement;
        "named-slot-paragraph": HTMLNamedSlotParagraphElement;
        "simple-button": HTMLSimpleButtonElement;
        "simple-label": HTMLSimpleLabelElement;
        "slot-paragraph": HTMLSlotParagraphElement;
    }
}
declare namespace LocalJSX {
    interface BgSample {
    }
    interface ButtonsWrapper {
    }
    interface ImgSample {
    }
    interface MoholeTitle {
        "titleString"?: string;
    }
    interface NamedSlotParagraph {
    }
    interface SimpleButton {
        /**
          * Text shown inside button
         */
        "label"?: string;
        /**
          * Event emitted when clicked on button
         */
        "onChangeClick"?: (event: CustomEvent<any>) => void;
    }
    interface SimpleLabel {
    }
    interface SlotParagraph {
    }
    interface IntrinsicElements {
        "bg-sample": BgSample;
        "buttons-wrapper": ButtonsWrapper;
        "img-sample": ImgSample;
        "mohole-title": MoholeTitle;
        "named-slot-paragraph": NamedSlotParagraph;
        "simple-button": SimpleButton;
        "simple-label": SimpleLabel;
        "slot-paragraph": SlotParagraph;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "bg-sample": LocalJSX.BgSample & JSXBase.HTMLAttributes<HTMLBgSampleElement>;
            "buttons-wrapper": LocalJSX.ButtonsWrapper & JSXBase.HTMLAttributes<HTMLButtonsWrapperElement>;
            "img-sample": LocalJSX.ImgSample & JSXBase.HTMLAttributes<HTMLImgSampleElement>;
            "mohole-title": LocalJSX.MoholeTitle & JSXBase.HTMLAttributes<HTMLMoholeTitleElement>;
            "named-slot-paragraph": LocalJSX.NamedSlotParagraph & JSXBase.HTMLAttributes<HTMLNamedSlotParagraphElement>;
            "simple-button": LocalJSX.SimpleButton & JSXBase.HTMLAttributes<HTMLSimpleButtonElement>;
            "simple-label": LocalJSX.SimpleLabel & JSXBase.HTMLAttributes<HTMLSimpleLabelElement>;
            "slot-paragraph": LocalJSX.SlotParagraph & JSXBase.HTMLAttributes<HTMLSlotParagraphElement>;
        }
    }
}
